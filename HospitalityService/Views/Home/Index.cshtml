@model HospitalityService.Models.ViewModels.UserHomeVM

@{
	ViewData["Title"] = "";
}

<!-- Component Start -->
<div class="flex flex-col min-h-screen overflow-auto text-gray-700 bg-gradient-to-tr from-blue-200 via-indigo-200 to-pink-200 pb-20">
	<div class="px-4 md:px-10 mt-6 flex items-center justify-between">
		<h1 class="text-2xl font-bold">Hi @GlobalVariables.USER_NAME</h1>
		<small class="text-sm">
			<!-- date -->
			@DateTime.Now.ToShortDateString()
		</small>
	</div>
	<div class="flex flex-wrap justify-center md:justify-evenly px-4 md:px-10 mt-4 space-x-0 md:space-x-6 overflow-auto">
		<div class="flex flex-col flex-shrink-0 w-full md:w-1/4">
			<div class="flex items-center flex-shrink-0 h-10 px-2">
				<span class="block text-sm font-semibold">News</span>
				<span class="flex items-center justify-center w-5 h-5 ml-2 text-sm font-semibold text-indigo-500 bg-white rounded bg-opacity-30">@Model.news.Count</span>
			</div>
			<div class="flex flex-col bg-image h-full md:bg-blue-300 rounded-xl p-3 overflow-auto" style="background-image: url('../images/Slice 3.png'); background-repeat: no-repeat; background-size: contain; background-position: center;">
				@if (Model.news.Count > 0)
				{
					@foreach (var item in Model.news)
					{
						<div class="relative flex flex-col border-1 items-start p-4 mt-3 bg-gray-100 rounded-lg cursor-pointer bg-opacity-90 group hover:bg-opacity-100">
							<button class="absolute top-0 right-0 flex items-center justify-center hidden w-5 h-5 mt-3 mr-2 text-gray-500 rounded hover:bg-gray-200 hover:text-gray-700 group-hover:flex">
								<svg class="w-4 h-4 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
									<path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
								</svg>
							</button>
							<span class="flex items-center h-6 px-3 text-xs font-semibold text-pink-500 bg-pink-100 rounded-full">@item.Title</span>
							<h4 class="mt-3 text-sm font-medium">@item.Description</h4>
							<div class="flex items-center w-full mt-3 text-xs font-medium text-gray-400">
								<div class="flex items-center">
									<svg class="w-4 h-4 text-gray-300 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
										<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
									</svg>
									<span class="ml-1 leading-none">@item.Date.ToString()</span>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<div class="relative flex flex-col border-1 items-start p-4 mt-3 bg-gray-100 rounded-lg cursor-pointer bg-opacity-90 group hover:bg-opacity-100">No news to show</div>
				}
			</div>
		</div>
		<div class="flex flex-col flex-shrink-0 w-full md:w-1/4">
			<div class="flex items-center flex-shrink-0 h-10 px-2">
				<span class="block text-sm font-semibold">Tasks to do</span>
				<span class="flex items-center justify-center w-5 h-5 ml-2 text-sm font-semibold text-indigo-500 bg-white rounded bg-opacity-30">@Model.tasks.Count</span>
			</div>
			<div class="flex flex-col bg-image  h-full md:bg-purple-300 p-3 rounded-xl overflow-auto " style="
            background-image: url('../images/Slice 2.png'); background-repeat: no-repeat; background-size: contain; background-position: center;">
				@if (Model.tasks.Count > 0)
				{
					@foreach (var item in Model.tasks)
					{
						<div class="relative flex flex-col border-1 items-start p-4 mt-3 bg-gray-100 rounded-lg cursor-pointer bg-opacity-90 group hover:bg-opacity-100">
							<button class="absolute top-0 right-0 flex items-center justify-center hidden w-5 h-5 mt-3 mr-2 text-gray-500 rounded hover:bg-gray-200 hover:text-gray-700 group-hover:flex">
								<svg class="w-4 h-4 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
									<path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
								</svg>
							</button>
							<span class="flex items-center h-6 px-3 text-xs font-semibold text-purple-500 bg-purple-100 rounded-full">@item.Title</span>
							<h4 class="mt-3 text-sm font-medium">@item.Description</h4>
							<div class="flex items-center w-full mt-3 text-xs font-medium text-gray-400">
								<div class="flex items-center">
									<svg class="w-4 h-4 text-gray-300 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
										<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
									</svg>
									<span class="ml-1 leading-none">@item.Deadline.ToString()</span>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<div class="relative flex flex-col border-1 items-start p-4 mt-3 bg-gray-100 rounded-lg cursor-pointer bg-opacity-90 group hover:bg-opacity-100">No tasks to show</div>
				}
			</div>
		</div>
		<div class="flex flex-col flex-shrink-0 w-full md:w-1/4">
			<div class="flex items-center flex-shrink-0 h-10 px-2">
				<span class="block text-sm font-semibold">Calender</span>
				<span class="flex items-center justify-center w-5 h-5 ml-2 text-sm font-semibold text-indigo-500 bg-white rounded bg-opacity-30">@Model.holidays.Count</span>
			</div>
			<div class="flex flex-col bg-image  h-full md:bg-indigo-300 rounded-xl p-3 overflow-auto " style="
            background-image: url('../images/Slice 1.png'); background-repeat: no-repeat; background-size: contain; background-position: center;">
			@if (Model.holidays.Count > 0)
				{
					@foreach (var item in Model.holidays)
					{
						<div class="relative flex flex-col border-1 items-start p-4 mt-3 bg-gray-100 rounded-lg cursor-pointer bg-opacity-90 group hover:bg-opacity-100">
							<button class="absolute top-0 right-0 flex items-center justify-center hidden w-5 h-5 mt-3 mr-2 text-gray-500 rounded hover:bg-gray-200 hover:text-gray-700 group-hover:flex">
								<svg class="w-4 h-4 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
									<path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
								</svg>
							</button>
							<div class="flex">
								<span class="flex items-center h-6 px-3 text-xs font-semibold text-blue-500 bg-blue-100 mr-1 rounded-full">@item.Title</span>
								@if (item.Status == false)
								{
												<span class="flex items-center h-6 px-3 text-xs font-semibold text-yellow-500 bg-yellow-100 rounded-full">Pending</span>
								}else
								{
									@if (item.IsAccepted)
									{
										<span class="flex items-center h-6 px-3 text-xs font-semibold text-green-500 bg-green-100 rounded-full">Accepted</span>
									}
									else
									{
														<span class="flex items-center h-6 px-3 text-xs font-semibold text-red-500 bg-red-100 rounded-full">Rejected</span>
									}
								}
							</div>
							<h4 class="mt-3 text-sm font-medium">@item.Description</h4>
							<div class="flex items-center w-full mt-3 text-xs font-medium text-gray-400">
								<div class="flex items-center">
									<svg class="w-4 h-4 text-gray-300 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
										<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
									</svg>
									<span class="ml-1 leading-none">@item.Date.ToString()</span>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<div class="relative flex flex-col border-1 items-start p-4 mt-3 bg-gray-100 rounded-lg cursor-pointer bg-opacity-90 group hover:bg-opacity-100">No holidays to show</div>
				}
			</div>
		</div>

	</div>
</div>
<!-- Component End -->